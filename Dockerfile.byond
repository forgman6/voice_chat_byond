# byond build + runtime (port 1337)
FROM ubuntu:22.04

ARG PROJECT_NAME=voice_chat_byond
ARG DME_FILE=voice_chat_byond.dme
ARG BYOND_VERSION="516"
ARG BYOND_BUILD="516.1666"

ENV DEBIAN_FRONTEND=noninteractive

# 32-bit deps + build tools (needed by byond + your makefile)
RUN dpkg --add-architecture i386 \
	&& apt-get update \
	&& apt-get upgrade -y \
	&& apt-get install -y --no-install-recommends \
		libc6:i386 libstdc++6:i386 zlib1g:i386 libgcc-s1:i386 \
		wget unzip make g++ g++-multilib ca-certificates \
	&& rm -rf /var/lib/apt/lists/*

# install BYOND
WORKDIR /tmp
RUN set -e \
	&& BYOND_ZIP="${BYOND_BUILD}_byond_linux.zip" \
	&& wget "https://www.byond.com/download/build/${BYOND_VERSION}/${BYOND_ZIP}" \
	&& unzip "$BYOND_ZIP" \
	&& rm "$BYOND_ZIP" \
	&& cd byond \
	&& make install

# app source
WORKDIR /app
COPY . /app

# optional: copy byondapi headers/sources into pipes if present (won't fail if missing)
# this mirrors your install.sh behavior but won’t brick the build if the folder isn’t there
RUN bash -lc 'if(test -d /app/byondapi); then \
		cp /app/byondapi/*.h /app/pipes || true; \
		cp /app/byondapi/*.cpp /app/pipes || true; \
	else \
		echo "no byondapi/ found, skipping copy"; \
	fi'

# build your shared lib
WORKDIR /app/pipes
RUN make

# compile DM project -> .dmb
WORKDIR /app
RUN DreamMaker "$DME_FILE" -clean

# expose byond runtime port
EXPOSE 1337

# run DreamDaemon; tweak flags if you need world params
# -trusted is common when you know what you’re doing; drop it if you don’t want it
CMD ["bash","-lc","DreamDaemon \"${DME_FILE%.dme}.dmb\" 1337 -trusted -logself -close"]